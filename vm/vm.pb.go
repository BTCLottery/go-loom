// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/loomnetwork/go-loom/vm/vm.proto

/*
Package vm is a generated protocol buffer package.

It is generated from these files:
	github.com/loomnetwork/go-loom/vm/vm.proto

It has these top-level messages:
	MessageTx
	DeployTx
	CallTx
	DeployResponse
*/
package vm

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import types "github.com/loomnetwork/go-loom/types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type VMType int32

const (
	VMType_PLUGIN VMType = 0
	VMType_EVM    VMType = 1
)

var VMType_name = map[int32]string{
	0: "PLUGIN",
	1: "EVM",
}
var VMType_value = map[string]int32{
	"PLUGIN": 0,
	"EVM":    1,
}

func (x VMType) String() string {
	return proto.EnumName(VMType_name, int32(x))
}
func (VMType) EnumDescriptor() ([]byte, []int) { return fileDescriptorVm, []int{0} }

type MessageTx struct {
	To   *types.Address `protobuf:"bytes,1,opt,name=to" json:"to,omitempty"`
	From *types.Address `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	Data []byte         `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *MessageTx) Reset()                    { *m = MessageTx{} }
func (m *MessageTx) String() string            { return proto.CompactTextString(m) }
func (*MessageTx) ProtoMessage()               {}
func (*MessageTx) Descriptor() ([]byte, []int) { return fileDescriptorVm, []int{0} }

func (m *MessageTx) GetTo() *types.Address {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *MessageTx) GetFrom() *types.Address {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *MessageTx) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeployTx struct {
	VmType VMType `protobuf:"varint,1,opt,name=vm_type,json=vmType,proto3,enum=VMType" json:"vm_type,omitempty"`
	Code   []byte `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (m *DeployTx) Reset()                    { *m = DeployTx{} }
func (m *DeployTx) String() string            { return proto.CompactTextString(m) }
func (*DeployTx) ProtoMessage()               {}
func (*DeployTx) Descriptor() ([]byte, []int) { return fileDescriptorVm, []int{1} }

func (m *DeployTx) GetVmType() VMType {
	if m != nil {
		return m.VmType
	}
	return VMType_PLUGIN
}

func (m *DeployTx) GetCode() []byte {
	if m != nil {
		return m.Code
	}
	return nil
}

type CallTx struct {
	VmType VMType `protobuf:"varint,1,opt,name=vm_type,json=vmType,proto3,enum=VMType" json:"vm_type,omitempty"`
	Input  []byte `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
}

func (m *CallTx) Reset()                    { *m = CallTx{} }
func (m *CallTx) String() string            { return proto.CompactTextString(m) }
func (*CallTx) ProtoMessage()               {}
func (*CallTx) Descriptor() ([]byte, []int) { return fileDescriptorVm, []int{2} }

func (m *CallTx) GetVmType() VMType {
	if m != nil {
		return m.VmType
	}
	return VMType_PLUGIN
}

func (m *CallTx) GetInput() []byte {
	if m != nil {
		return m.Input
	}
	return nil
}

type DeployResponse struct {
	Contract *types.Address `protobuf:"bytes,1,opt,name=contract" json:"contract,omitempty"`
	Output   []byte         `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
}

func (m *DeployResponse) Reset()                    { *m = DeployResponse{} }
func (m *DeployResponse) String() string            { return proto.CompactTextString(m) }
func (*DeployResponse) ProtoMessage()               {}
func (*DeployResponse) Descriptor() ([]byte, []int) { return fileDescriptorVm, []int{3} }

func (m *DeployResponse) GetContract() *types.Address {
	if m != nil {
		return m.Contract
	}
	return nil
}

func (m *DeployResponse) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

func init() {
	proto.RegisterType((*MessageTx)(nil), "MessageTx")
	proto.RegisterType((*DeployTx)(nil), "DeployTx")
	proto.RegisterType((*CallTx)(nil), "CallTx")
	proto.RegisterType((*DeployResponse)(nil), "DeployResponse")
	proto.RegisterEnum("VMType", VMType_name, VMType_value)
}

func init() { proto.RegisterFile("github.com/loomnetwork/go-loom/vm/vm.proto", fileDescriptorVm) }

var fileDescriptorVm = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x51, 0x4b, 0xfb, 0x30,
	0x14, 0xc5, 0xff, 0xdd, 0xf6, 0xcf, 0xea, 0x75, 0x8c, 0x11, 0x44, 0x8a, 0x28, 0x94, 0xe2, 0xc3,
	0x18, 0xd8, 0xca, 0xfc, 0x02, 0x13, 0x15, 0x11, 0xec, 0x90, 0x52, 0xe7, 0xa3, 0x74, 0x6d, 0xac,
	0xc3, 0xb6, 0x37, 0x34, 0xb7, 0x75, 0xfd, 0xf6, 0xd2, 0x74, 0x28, 0xe8, 0x83, 0x42, 0x48, 0xee,
	0xc9, 0xcd, 0xf9, 0x9d, 0x24, 0x30, 0x4b, 0x37, 0xf4, 0x5a, 0xad, 0xdd, 0x18, 0x73, 0x2f, 0x43,
	0xcc, 0x0b, 0x41, 0xef, 0x58, 0xbe, 0x79, 0x29, 0x9e, 0xb5, 0xd2, 0xab, 0xdb, 0xe1, 0xca, 0x12,
	0x09, 0x8f, 0xce, 0x7f, 0x39, 0x4b, 0x8d, 0x14, 0xaa, 0x9b, 0x3b, 0x87, 0xf3, 0x04, 0x7b, 0xbe,
	0x50, 0x2a, 0x4a, 0x45, 0xb8, 0xe5, 0x16, 0xf4, 0x08, 0x2d, 0xc3, 0x36, 0xa6, 0xfb, 0x73, 0xd3,
	0xbd, 0x4c, 0x92, 0x52, 0x28, 0x15, 0xf4, 0x08, 0xf9, 0x31, 0x0c, 0x5e, 0x4a, 0xcc, 0xad, 0xde,
	0xb7, 0x9e, 0xde, 0xe5, 0x1c, 0x06, 0x49, 0x44, 0x91, 0xd5, 0xb7, 0x8d, 0xe9, 0x28, 0xd0, 0xb5,
	0xb3, 0x00, 0xf3, 0x5a, 0xc8, 0x0c, 0x9b, 0x70, 0xcb, 0x6d, 0x18, 0xd6, 0xf9, 0x73, 0x1b, 0xab,
	0xe1, 0xe3, 0xf9, 0xd0, 0x5d, 0xf9, 0x61, 0x23, 0x45, 0xc0, 0xea, 0xbc, 0x5d, 0x5b, 0x42, 0x8c,
	0x89, 0xd0, 0xfc, 0x51, 0xa0, 0x6b, 0x67, 0x01, 0xec, 0x2a, 0xca, 0xb2, 0x3f, 0xf9, 0x0f, 0xe0,
	0xff, 0xa6, 0x90, 0x15, 0xed, 0x00, 0x9d, 0x70, 0x96, 0x30, 0xee, 0xee, 0x10, 0x08, 0x25, 0xb1,
	0x50, 0x82, 0x9f, 0x82, 0x19, 0x63, 0x41, 0x65, 0x14, 0xd3, 0x8f, 0x77, 0x7e, 0x76, 0xf8, 0x21,
	0x30, 0xac, 0xe8, 0x0b, 0xb7, 0x53, 0xb3, 0x13, 0x60, 0x5d, 0x2e, 0x07, 0x60, 0x0f, 0xf7, 0x8f,
	0xb7, 0x77, 0xcb, 0xc9, 0x3f, 0x3e, 0x84, 0xfe, 0xcd, 0xca, 0x9f, 0x18, 0x6b, 0xa6, 0xbf, 0xf4,
	0xe2, 0x23, 0x00, 0x00, 0xff, 0xff, 0x9f, 0xbd, 0x35, 0xa5, 0xb2, 0x01, 0x00, 0x00,
}

// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/loomnetwork/go-loom/builtin/types/transfer_gateway/transfer_gateway.proto

/*
Package transfer_gateway is a generated protocol buffer package.

It is generated from these files:
	github.com/loomnetwork/go-loom/builtin/types/transfer_gateway/transfer_gateway.proto

It has these top-level messages:
	TransferGatewayState
	TransferGatewayWithdrawalReceipt
	TransferGatewayAccount
	TransferGatewayTokenDeposit
	TransferGatewayNFTDeposit
	TransferGatewayInitRequest
	TransferGatewayProcessEventBatchRequest
	TransferGatewayStateRequest
	TransferGatewayStateResponse
	TransferGatewayWithdrawERC721Request
	TransferGatewayWithdrawalReceiptRequest
	TransferGatewayWithdrawalReceiptResponse
*/
package transfer_gateway

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import types "github.com/loomnetwork/go-loom/types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type TransferGatewayState struct {
	LastEthBlock uint64 `protobuf:"varint,1,opt,name=last_eth_block,json=lastEthBlock,proto3" json:"last_eth_block,omitempty"`
}

func (m *TransferGatewayState) Reset()         { *m = TransferGatewayState{} }
func (m *TransferGatewayState) String() string { return proto.CompactTextString(m) }
func (*TransferGatewayState) ProtoMessage()    {}
func (*TransferGatewayState) Descriptor() ([]byte, []int) {
	return fileDescriptorTransferGateway, []int{0}
}

func (m *TransferGatewayState) GetLastEthBlock() uint64 {
	if m != nil {
		return m.LastEthBlock
	}
	return 0
}

type TransferGatewayWithdrawalReceipt struct {
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Signature generated by the Oracle that signed the hash
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *TransferGatewayWithdrawalReceipt) Reset()         { *m = TransferGatewayWithdrawalReceipt{} }
func (m *TransferGatewayWithdrawalReceipt) String() string { return proto.CompactTextString(m) }
func (*TransferGatewayWithdrawalReceipt) ProtoMessage()    {}
func (*TransferGatewayWithdrawalReceipt) Descriptor() ([]byte, []int) {
	return fileDescriptorTransferGateway, []int{1}
}

func (m *TransferGatewayWithdrawalReceipt) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *TransferGatewayWithdrawalReceipt) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type TransferGatewayAccount struct {
	Owner             *types.Address                    `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
	WithdrawalNonce   uint64                            `protobuf:"varint,2,opt,name=withdrawal_nonce,json=withdrawalNonce,proto3" json:"withdrawal_nonce,omitempty"`
	WithdrawalReceipt *TransferGatewayWithdrawalReceipt `protobuf:"bytes,3,opt,name=withdrawal_receipt,json=withdrawalReceipt" json:"withdrawal_receipt,omitempty"`
}

func (m *TransferGatewayAccount) Reset()         { *m = TransferGatewayAccount{} }
func (m *TransferGatewayAccount) String() string { return proto.CompactTextString(m) }
func (*TransferGatewayAccount) ProtoMessage()    {}
func (*TransferGatewayAccount) Descriptor() ([]byte, []int) {
	return fileDescriptorTransferGateway, []int{2}
}

func (m *TransferGatewayAccount) GetOwner() *types.Address {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *TransferGatewayAccount) GetWithdrawalNonce() uint64 {
	if m != nil {
		return m.WithdrawalNonce
	}
	return 0
}

func (m *TransferGatewayAccount) GetWithdrawalReceipt() *TransferGatewayWithdrawalReceipt {
	if m != nil {
		return m.WithdrawalReceipt
	}
	return nil
}

// Fungible Token Deposit (ETH or ERC20) made into the Gateway on Ethereum mainnet
type TransferGatewayTokenDeposit struct {
	// Token contract address, blank if ETH
	Token *types.Address `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	// Ethereum mainnet address of entity that made the deposit
	From *types.Address `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	// DAppChain address of entity that should receive the deposit
	To       *types.Address `protobuf:"bytes,3,opt,name=to" json:"to,omitempty"`
	Amount   *types.BigUInt `protobuf:"bytes,4,opt,name=amount" json:"amount,omitempty"`
	EthBlock uint64         `protobuf:"varint,5,opt,name=eth_block,json=ethBlock,proto3" json:"eth_block,omitempty"`
}

func (m *TransferGatewayTokenDeposit) Reset()         { *m = TransferGatewayTokenDeposit{} }
func (m *TransferGatewayTokenDeposit) String() string { return proto.CompactTextString(m) }
func (*TransferGatewayTokenDeposit) ProtoMessage()    {}
func (*TransferGatewayTokenDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptorTransferGateway, []int{3}
}

func (m *TransferGatewayTokenDeposit) GetToken() *types.Address {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *TransferGatewayTokenDeposit) GetFrom() *types.Address {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *TransferGatewayTokenDeposit) GetTo() *types.Address {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *TransferGatewayTokenDeposit) GetAmount() *types.BigUInt {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *TransferGatewayTokenDeposit) GetEthBlock() uint64 {
	if m != nil {
		return m.EthBlock
	}
	return 0
}

// Non-Fungible Token Deposit (ERC721) made into the Gateway on Ethereum mainnet
type TransferGatewayNFTDeposit struct {
	// Token contract address
	Token    *types.Address `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	From     *types.Address `protobuf:"bytes,2,opt,name=from" json:"from,omitempty"`
	Uid      *types.BigUInt `protobuf:"bytes,3,opt,name=uid" json:"uid,omitempty"`
	EthBlock uint64         `protobuf:"varint,4,opt,name=eth_block,json=ethBlock,proto3" json:"eth_block,omitempty"`
}

func (m *TransferGatewayNFTDeposit) Reset()         { *m = TransferGatewayNFTDeposit{} }
func (m *TransferGatewayNFTDeposit) String() string { return proto.CompactTextString(m) }
func (*TransferGatewayNFTDeposit) ProtoMessage()    {}
func (*TransferGatewayNFTDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptorTransferGateway, []int{4}
}

func (m *TransferGatewayNFTDeposit) GetToken() *types.Address {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *TransferGatewayNFTDeposit) GetFrom() *types.Address {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *TransferGatewayNFTDeposit) GetUid() *types.BigUInt {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (m *TransferGatewayNFTDeposit) GetEthBlock() uint64 {
	if m != nil {
		return m.EthBlock
	}
	return 0
}

type TransferGatewayInitRequest struct {
	// List of oracles that the Gateway should accept data from, each oracle is identified by the
	// address of the validator node it runs in
	Oracles []*types.Address `protobuf:"bytes,1,rep,name=oracles" json:"oracles,omitempty"`
}

func (m *TransferGatewayInitRequest) Reset()         { *m = TransferGatewayInitRequest{} }
func (m *TransferGatewayInitRequest) String() string { return proto.CompactTextString(m) }
func (*TransferGatewayInitRequest) ProtoMessage()    {}
func (*TransferGatewayInitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorTransferGateway, []int{5}
}

func (m *TransferGatewayInitRequest) GetOracles() []*types.Address {
	if m != nil {
		return m.Oracles
	}
	return nil
}

// Batch of events from the Gateway on Ethereum mainnet
type TransferGatewayProcessEventBatchRequest struct {
	FtDeposits  []*TransferGatewayTokenDeposit `protobuf:"bytes,1,rep,name=ft_deposits,json=ftDeposits" json:"ft_deposits,omitempty"`
	NftDeposits []*TransferGatewayNFTDeposit   `protobuf:"bytes,2,rep,name=nft_deposits,json=nftDeposits" json:"nft_deposits,omitempty"`
}

func (m *TransferGatewayProcessEventBatchRequest) Reset() {
	*m = TransferGatewayProcessEventBatchRequest{}
}
func (m *TransferGatewayProcessEventBatchRequest) String() string { return proto.CompactTextString(m) }
func (*TransferGatewayProcessEventBatchRequest) ProtoMessage()    {}
func (*TransferGatewayProcessEventBatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorTransferGateway, []int{6}
}

func (m *TransferGatewayProcessEventBatchRequest) GetFtDeposits() []*TransferGatewayTokenDeposit {
	if m != nil {
		return m.FtDeposits
	}
	return nil
}

func (m *TransferGatewayProcessEventBatchRequest) GetNftDeposits() []*TransferGatewayNFTDeposit {
	if m != nil {
		return m.NftDeposits
	}
	return nil
}

type TransferGatewayStateRequest struct {
}

func (m *TransferGatewayStateRequest) Reset()         { *m = TransferGatewayStateRequest{} }
func (m *TransferGatewayStateRequest) String() string { return proto.CompactTextString(m) }
func (*TransferGatewayStateRequest) ProtoMessage()    {}
func (*TransferGatewayStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorTransferGateway, []int{7}
}

type TransferGatewayStateResponse struct {
	State *TransferGatewayState `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
}

func (m *TransferGatewayStateResponse) Reset()         { *m = TransferGatewayStateResponse{} }
func (m *TransferGatewayStateResponse) String() string { return proto.CompactTextString(m) }
func (*TransferGatewayStateResponse) ProtoMessage()    {}
func (*TransferGatewayStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorTransferGateway, []int{8}
}

func (m *TransferGatewayStateResponse) GetState() *TransferGatewayState {
	if m != nil {
		return m.State
	}
	return nil
}

type TransferGatewayWithdrawERC721Request struct {
	// ID of ERC721 token
	TokenId *types.BigUInt `protobuf:"bytes,1,opt,name=token_id,json=tokenId" json:"token_id,omitempty"`
	// DAppChain address of ERC721 contract token belongs to
	TokenContract *types.Address `protobuf:"bytes,2,opt,name=token_contract,json=tokenContract" json:"token_contract,omitempty"`
}

func (m *TransferGatewayWithdrawERC721Request) Reset()         { *m = TransferGatewayWithdrawERC721Request{} }
func (m *TransferGatewayWithdrawERC721Request) String() string { return proto.CompactTextString(m) }
func (*TransferGatewayWithdrawERC721Request) ProtoMessage()    {}
func (*TransferGatewayWithdrawERC721Request) Descriptor() ([]byte, []int) {
	return fileDescriptorTransferGateway, []int{9}
}

func (m *TransferGatewayWithdrawERC721Request) GetTokenId() *types.BigUInt {
	if m != nil {
		return m.TokenId
	}
	return nil
}

func (m *TransferGatewayWithdrawERC721Request) GetTokenContract() *types.Address {
	if m != nil {
		return m.TokenContract
	}
	return nil
}

type TransferGatewayWithdrawalReceiptRequest struct {
	Owner *types.Address `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
}

func (m *TransferGatewayWithdrawalReceiptRequest) Reset() {
	*m = TransferGatewayWithdrawalReceiptRequest{}
}
func (m *TransferGatewayWithdrawalReceiptRequest) String() string { return proto.CompactTextString(m) }
func (*TransferGatewayWithdrawalReceiptRequest) ProtoMessage()    {}
func (*TransferGatewayWithdrawalReceiptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorTransferGateway, []int{10}
}

func (m *TransferGatewayWithdrawalReceiptRequest) GetOwner() *types.Address {
	if m != nil {
		return m.Owner
	}
	return nil
}

type TransferGatewayWithdrawalReceiptResponse struct {
	Receipt *TransferGatewayWithdrawalReceipt `protobuf:"bytes,1,opt,name=receipt" json:"receipt,omitempty"`
}

func (m *TransferGatewayWithdrawalReceiptResponse) Reset() {
	*m = TransferGatewayWithdrawalReceiptResponse{}
}
func (m *TransferGatewayWithdrawalReceiptResponse) String() string { return proto.CompactTextString(m) }
func (*TransferGatewayWithdrawalReceiptResponse) ProtoMessage()    {}
func (*TransferGatewayWithdrawalReceiptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorTransferGateway, []int{11}
}

func (m *TransferGatewayWithdrawalReceiptResponse) GetReceipt() *TransferGatewayWithdrawalReceipt {
	if m != nil {
		return m.Receipt
	}
	return nil
}

func init() {
	proto.RegisterType((*TransferGatewayState)(nil), "TransferGatewayState")
	proto.RegisterType((*TransferGatewayWithdrawalReceipt)(nil), "TransferGatewayWithdrawalReceipt")
	proto.RegisterType((*TransferGatewayAccount)(nil), "TransferGatewayAccount")
	proto.RegisterType((*TransferGatewayTokenDeposit)(nil), "TransferGatewayTokenDeposit")
	proto.RegisterType((*TransferGatewayNFTDeposit)(nil), "TransferGatewayNFTDeposit")
	proto.RegisterType((*TransferGatewayInitRequest)(nil), "TransferGatewayInitRequest")
	proto.RegisterType((*TransferGatewayProcessEventBatchRequest)(nil), "TransferGatewayProcessEventBatchRequest")
	proto.RegisterType((*TransferGatewayStateRequest)(nil), "TransferGatewayStateRequest")
	proto.RegisterType((*TransferGatewayStateResponse)(nil), "TransferGatewayStateResponse")
	proto.RegisterType((*TransferGatewayWithdrawERC721Request)(nil), "TransferGatewayWithdrawERC721Request")
	proto.RegisterType((*TransferGatewayWithdrawalReceiptRequest)(nil), "TransferGatewayWithdrawalReceiptRequest")
	proto.RegisterType((*TransferGatewayWithdrawalReceiptResponse)(nil), "TransferGatewayWithdrawalReceiptResponse")
}

func init() {
	proto.RegisterFile("github.com/loomnetwork/go-loom/builtin/types/transfer_gateway/transfer_gateway.proto", fileDescriptorTransferGateway)
}

var fileDescriptorTransferGateway = []byte{
	// 595 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0x95, 0x53, 0xf7, 0x6f, 0xda, 0xaf, 0x1f, 0xac, 0x00, 0x99, 0x34, 0xa0, 0x60, 0x2a, 0x51,
	0x84, 0xb0, 0xa1, 0x5c, 0x70, 0x01, 0x95, 0x68, 0x4b, 0x41, 0x11, 0x52, 0x55, 0x99, 0x20, 0x2e,
	0xad, 0x8d, 0xbd, 0xb1, 0xad, 0x3a, 0xbb, 0x61, 0x77, 0x8c, 0x55, 0x89, 0xa7, 0xe0, 0x25, 0x78,
	0x01, 0x78, 0x3f, 0xe4, 0xb5, 0xdd, 0xa4, 0x76, 0x4b, 0xb8, 0xe0, 0x26, 0xb2, 0xcf, 0x99, 0x39,
	0x39, 0x3b, 0x67, 0xc7, 0x30, 0x8c, 0x12, 0x8c, 0xb3, 0x91, 0x13, 0x88, 0x89, 0x9b, 0x0a, 0x31,
	0xe1, 0x0c, 0x73, 0x21, 0xcf, 0xdc, 0x48, 0x3c, 0x2d, 0x5e, 0xdd, 0x51, 0x96, 0xa4, 0x98, 0x70,
	0x17, 0xcf, 0xa7, 0x4c, 0xb9, 0x28, 0x29, 0x57, 0x63, 0x26, 0xfd, 0x88, 0x22, 0xcb, 0xe9, 0x79,
	0x0b, 0x70, 0xa6, 0x52, 0xa0, 0xe8, 0x3e, 0x5b, 0xa0, 0x5a, 0xa9, 0x15, 0xbf, 0x65, 0x87, 0xfd,
	0x1a, 0x6e, 0x0d, 0x2b, 0xad, 0xf7, 0xa5, 0xd4, 0x47, 0xa4, 0xc8, 0xc8, 0x0e, 0x6c, 0xa5, 0x54,
	0xa1, 0xcf, 0x30, 0xf6, 0x47, 0xa9, 0x08, 0xce, 0x2c, 0xa3, 0x6f, 0xec, 0x9a, 0xde, 0x66, 0x81,
	0x1e, 0x63, 0x7c, 0x58, 0x60, 0xf6, 0x10, 0xfa, 0x8d, 0xee, 0xcf, 0x09, 0xc6, 0xa1, 0xa4, 0x39,
	0x4d, 0x3d, 0x16, 0xb0, 0x64, 0x8a, 0x84, 0x80, 0x19, 0x53, 0x15, 0xeb, 0xfe, 0x4d, 0x4f, 0x3f,
	0x93, 0x1e, 0xac, 0xab, 0x24, 0xe2, 0x14, 0x33, 0xc9, 0xac, 0x8e, 0x26, 0x66, 0x80, 0xfd, 0xcb,
	0x80, 0x3b, 0x0d, 0xd9, 0x83, 0x20, 0x10, 0x19, 0x47, 0x72, 0x1f, 0x96, 0x45, 0xce, 0x99, 0xd4,
	0x6a, 0x1b, 0x7b, 0x6b, 0xce, 0x41, 0x18, 0x4a, 0xa6, 0x94, 0x57, 0xc2, 0xe4, 0x31, 0xdc, 0xc8,
	0x2f, 0x1c, 0xf8, 0x5c, 0xf0, 0xa0, 0xd4, 0x37, 0xbd, 0xff, 0x67, 0xf8, 0x49, 0x01, 0x93, 0x53,
	0x20, 0x73, 0xa5, 0xb2, 0x74, 0x6b, 0x2d, 0x69, 0xdd, 0x07, 0xce, 0xa2, 0x63, 0x79, 0x37, 0xf3,
	0x26, 0x64, 0xff, 0x34, 0x60, 0xbb, 0xd1, 0x37, 0x14, 0x67, 0x8c, 0xbf, 0x65, 0x53, 0xa1, 0x12,
	0x6d, 0x1e, 0x8b, 0xf7, 0xb6, 0x79, 0x0d, 0x93, 0x1e, 0x98, 0x63, 0x29, 0x26, 0xda, 0xf0, 0x3c,
	0xad, 0x51, 0x62, 0x41, 0x07, 0x45, 0xe5, 0x6f, 0xc6, 0x75, 0x50, 0x90, 0x3e, 0xac, 0xd0, 0x49,
	0x31, 0x1e, 0xcb, 0xac, 0xd8, 0xc3, 0x24, 0xfa, 0x34, 0xe0, 0xe8, 0x55, 0x38, 0xd9, 0x86, 0xf5,
	0x59, 0x90, 0xcb, 0x7a, 0x1e, 0x6b, 0xac, 0x0e, 0xf1, 0xbb, 0x01, 0x77, 0x1b, 0xb6, 0x4f, 0xde,
	0x0d, 0xff, 0x8d, 0xe9, 0x2e, 0x2c, 0x65, 0x49, 0x78, 0xe1, 0xba, 0xf6, 0x55, 0x80, 0x97, 0x4d,
	0x99, 0x0d, 0x53, 0x6f, 0xa0, 0xdb, 0xf0, 0x34, 0xe0, 0x09, 0x7a, 0xec, 0x4b, 0xc6, 0x14, 0x12,
	0x1b, 0x56, 0x85, 0xa4, 0x41, 0xca, 0x94, 0x65, 0xf4, 0x97, 0x2e, 0xfd, 0x6f, 0x4d, 0xd8, 0x3f,
	0x0c, 0x78, 0xd4, 0x90, 0x38, 0x95, 0x22, 0x60, 0x4a, 0x1d, 0x7f, 0x65, 0x1c, 0x0f, 0x29, 0x06,
	0x71, 0xad, 0xb7, 0x0f, 0x1b, 0x63, 0xf4, 0xc3, 0xf2, 0xc8, 0xb5, 0x66, 0xcf, 0xf9, 0x43, 0x98,
	0x1e, 0x8c, 0xb1, 0x7a, 0x54, 0x64, 0x1f, 0x36, 0xf9, 0x7c, 0x7f, 0x47, 0xf7, 0x77, 0x9d, 0x6b,
	0xa7, 0xea, 0x6d, 0xf0, 0x59, 0xbb, 0x7d, 0xaf, 0x75, 0x6d, 0xf4, 0x0e, 0x56, 0xe6, 0xec, 0x0f,
	0xd0, 0xbb, 0x9a, 0x56, 0x53, 0xc1, 0x15, 0x23, 0x4f, 0x60, 0x59, 0x15, 0x40, 0x95, 0xd0, 0x6d,
	0xe7, 0xca, 0xea, 0xb2, 0xc6, 0xfe, 0x06, 0x3b, 0xd7, 0x5c, 0xed, 0x63, 0xef, 0xe8, 0xe5, 0xde,
	0xf3, 0x7a, 0x22, 0x0f, 0x61, 0x4d, 0xe7, 0xeb, 0x27, 0xe1, 0x45, 0xf2, 0x75, 0x7a, 0xab, 0x9a,
	0x19, 0x84, 0xc4, 0x85, 0xad, 0xb2, 0x28, 0x10, 0x1c, 0x25, 0x0d, 0xb0, 0x75, 0x0b, 0xfe, 0xd3,
	0xfc, 0x51, 0x45, 0xdb, 0x83, 0x56, 0x24, 0xed, 0xc5, 0xaa, 0x0c, 0x2c, 0xd8, 0x74, 0x3b, 0x82,
	0xdd, 0xc5, 0x52, 0xd5, 0x84, 0x5e, 0xc1, 0x6a, 0xbd, 0xdf, 0xc6, 0xdf, 0xee, 0x77, 0xdd, 0x31,
	0x5a, 0xd1, 0x1f, 0xca, 0x17, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x1b, 0xbe, 0x91, 0x47, 0xb2,
	0x05, 0x00, 0x00,
}
